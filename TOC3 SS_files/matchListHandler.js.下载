var matchListHandler = {
    provinceSelector: $('.city-selecter__province select')[0],
    provinceSelectorEmptyOption: document.createElement('option'),
    citySelector: $('.city-selecter__city select')[0],
    citySelectorEmptyOption: document.createElement('option'),
    city_bar: CITY_MATH_BAR,
    newBar: [],
    init:function () {
      this.initArea();
      this.initProvince();
      this.initCity();
      this.initListen();
      this.initMatch(true);
    },
    // 初始化省份选择器
    initProvince:function(){
        let output = document.createDocumentFragment();
        let option = this.initOption('','选择省份',this.provinceSelectorEmptyOption);
        output.appendChild(option);
        for(let key in area[0]){
            let option = this.initOption(key,area[0][key])
            output.appendChild(option);
        }
        this.provinceSelector.appendChild(output);
    },
    // 选择省份后初始化城市选择器
    initCity:function(){
        this.citySelector.innerHTML = '';
        let output = document.createDocumentFragment();
        let option = this.initOption('','选择城市',this.citySelectorEmptyOption);
        output.appendChild(option);
        let prov_id = this.provinceSelector.value;
        for(let key in area[prov_id]){
            let option = this.initOption(key,area[prov_id][key])
            output.appendChild(option);
        }
        this.citySelector.appendChild(output);
    },
    initOption:function(key,val,option){
        if(!option)option = document.createElement('option');
        option.setAttribute('value',key);
        option.innerText = val;
        return option;
    },
    initListen:function(){
        if(this.listened)return;
        this.listened = true;
        let self = this;
        this.provinceSelector.onchange = function(){
            self.initCity();
            self.initMatch();
        }
        this.citySelector.onchange = function(){
            self.initMatch();
        }
    },
    findObject(obj,value){
        for(let key in obj){
            if(value == obj[key]){
                return [key,obj[key]];
            }
        }
        return false;
    },
    findObject2(obj,value){
        for(let key in obj){
            if(key == value){
                return [key,obj[key]];
            }
        }
        return false;
    },
    initMatch: function (initProvince) {
        let self = this;
        if(initProvince){
            $.ajax({
                'url':'https://apis.map.qq.com/ws/location/v1/ip?key=IKXBZ-IOUW4-4HKUY-DSQLS-NBOVK-YGFAG',
                'dataType':'json',
                success:function(res){
                    try{
                        // let prov = Object.entries(area[0]).find(x=> x[1] == res.result.ad_info.province)
                        let prov = self.findObject(area[0],res.result.ad_info.province)
                        if(prov){
                            self.provinceSelector.value = prov[0];
                            self.initCity();
                        }else{
                            throw(1);
                        }
                        // let city = Object.entries(area[self.provinceSelector.value]).find(x=> x[1] == res.result.ad_info.city)
                        let city = self.findObject(area[self.provinceSelector.value],res.result.ad_info.city)
                        if(city){
                            self.citySelector.value = city[0];
                        }else{
                            throw(1);
                        }
                    }catch(e){
                        let rand = parseInt(0.7 * 10 * Math.random());
                        switch(rand){
                            case "0":
                                // 深圳
                                self.provinceSelector.value = "440000";
                                self.initCity();
                                self.citySelector.value = "440300";
                                break;
                            case "1":
                                // 广州
                                self.provinceSelector.value = "440000";
                                self.initCity();
                                self.citySelector.value = "440100";
                                break;
                            case "2":
                                // 上海
                                self.provinceSelector.value = "310000";
                                self.initCity();
                                self.citySelector.value = "310100";
                                break;
                            case "3":
                                // 成都
                                self.provinceSelector.value = "510000";
                                self.initCity();
                                self.citySelector.value = "510100";
                                break;
                            case "4":
                                // 西安
                                self.provinceSelector.value = "610000";
                                self.initCity();
                                self.citySelector.value = "610100";
                                break;
                            case "5":
                                // 武汉
                                self.provinceSelector.value = "420000";
                                self.initCity();
                                self.citySelector.value = "420100";
                                break;
                            case "6":
                            default:
                                // 长沙
                                self.provinceSelector.value = "430000";
                                self.initCity();
                                self.citySelector.value = "430100";
                                break;
                        }
                    }
                    self.initMatch();
                }
            })
            return;
        }
        if (!self.provinceSelector.value == '') {
            if (!self.citySelector.value == '') {
                self.newBar = self.city_bar.filter(function (bar) {
                    return bar.province === self.findObject2(area[0],self.provinceSelector.value)[1];
                })
                self.newBar = this.newBar.filter(function (b) {
                    return b.city == self.findObject2(area[self.provinceSelector.value],self.citySelector.value)[1];
                })
                console.log(self.newBar)
                if (self.newBar.length == 0) {
                    alert('抱歉，当前城市无赛点，建议参与全民赛道')
                }
                self.rendererTable();
            } else {
                self.newBar = self.city_bar.filter(function (bar) {
                    return bar.province === self.findObject2(area[0],self.provinceSelector.value)[1];
                })
                self.rendererTable();
            }
        } else {
            this.newBar = self.city_bar;
            self.rendererTable();
        }
        if (this.newBar.length == 0) {
            this.newBar = self.city_bar;
            self.rendererTable();
        }
    },
    initArea:function(){
    // 格式化结果，0是省，省id对应的是地级市
    // {0: {110000: "北京市", 120000: "天津市"},110000: {…}, 120000: {…}}
    let output = {"0":{}};
    area.map(function(val){
        output["0"][val.prov_id] = val.prov_name;
        output[val.prov_id] = {};
        val.city.map(function(v){
            output[val.prov_id][v.city_id] = v.city_name;
        })
    })
    area = output;
},
    rendererTable: function () {
        var html = ''
        this.newBar.map(function (bar) {
          html +=`
               <div class="city-table-tr">
                <span class="city-table-td">${bar.province}</span>
                <span class="city-table-td">${bar.city}</span>
                <span class="city-table-td">${bar.barName}</span>
                <span class="city-table-td">${bar.location}</span>
                <span class="city-table-td">${bar.time}</span>
                <span class="city-table-td">${bar.conacts}</span>
                <span class="city-table-td">${bar.tel}</span>
               </div>
          `
        });
        $('#cityContainer').html(html);
    }
}
matchListHandler.init();